@model ModuleServicePOS.Data.OrderDetailsFormModel
@using Microsoft.AspNetCore.Http
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Repair";

    var ReceivedItemListArray = new string[] { "LCD", "SYSTEM BOARD", "CPUFAN", "TOUCH PAD", "HINGE", "HDD", "SSD", "RAM", "DV-WRITER", "AC-ADAPTER", "MOUSE" };
    var ReceivedItemList = new List<SelectListItem>();
    foreach (var item in ReceivedItemListArray)
    {
        ReceivedItemList.Add(new SelectListItem { Text = item, Value = item });
    }

    var ProductStatusArray = new string[] { "REPAIR", "EXCHANGE", "UPGRADE", "RETURNED NOT REPAIRED" };
    var ProductStatusList = new List<SelectListItem>();
    foreach (var item in ProductStatusArray)
    {
        ProductStatusList.Add(new SelectListItem { Text = item, Value = item });
    }

    var OrderStatusArray = new string[] { "NOTSTARTED", "INPROGRESS", "REPAIR", "NOTREPAIRED" };
    var OrderStatusList = new List<SelectListItem>();
    foreach (var item in OrderStatusArray)
    {
        OrderStatusList.Add(new SelectListItem { Text = item, Value = item });
    }

    List<string> selectedSummaryOfReceivedMasterIds = new List<string>();
    List<ModuleServicePOS.Data.ModelClasses.SummaryOfReceivedOrderDetail> selectedSummaryOfReceived = new List<ModuleServicePOS.Data.ModelClasses.SummaryOfReceivedOrderDetail>();

    if(selectedSummaryOfReceived != null && Model.SummaryOfReceivedOrderDetailsJSON != null)
    {
        selectedSummaryOfReceived = Newtonsoft.Json.JsonConvert.DeserializeObject<List<ModuleServicePOS.Data.ModelClasses.SummaryOfReceivedOrderDetail>>(Model.SummaryOfReceivedOrderDetailsJSON);

        foreach (var item in selectedSummaryOfReceived.Select(x => Convert.ToString(x.SummaryOfReceivedMasterId)))
        {
            selectedSummaryOfReceivedMasterIds.Add(item);
        }
    }


    Model.SubTotal = Model.EstimateDetailsList != null ? Model.EstimateDetailsList.Sum(x => x.Amount) : 0;
    Model.GrandTotal = Model.EstimateDetailsList != null ? Model.EstimateDetailsList.Sum(x => x.Amount) : 0;
}

<form method="post" asp-action="Repair" asp-controller="Admin">
    <input type="hidden" id="selectedSORIds"  value="" />
    <input type="hidden" asp-for="SummaryOfReceivedOrderDetailsJSON" value="@Model.SummaryOfReceivedOrderDetailsJSON" />

    <div class="container">
        <div class="row">
            <div class="col-8">
                <h2>Computer Repair And Service Job Card</h2>
            </div>
            <div class="col">
                <button type="submit" class="btn btn-primary float-right" id="btnSubmitData">Save</button>
                <a class="btn btn-info float-right mr-1" asp-controller="Admin" asp-action="Index">Back</a>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col">
                <label asp-for="PreparedBy"></label>
                <input type="text" class="form-control" readonly asp-for="PreparedBy" value="@Model.PreparedBy" required />
                <span asp-validation-for="PreparedBy"></span>
            </div>
            <div class="col">
                <label asp-for="SerialNo"></label>
                <input type="text" class="form-control" readonly asp-for="SerialNo" value="@Model.SerialNo" required />
                <span asp-validation-for="SerialNo"></span>
            </div>
        </div>

        <div class="row mt-2">
            <div class="col">
                <label asp-for="ClientName"></label>
                <input type="text" asp-for="ClientName" value="@Model.ClientName" class="form-control" required />
                <span asp-validation-for="ClientName"></span>

            </div>
            <div class="col">
                <label asp-for="MobileNo"></label>
                <input type="text" asp-for="MobileNo" value="@Model.MobileNo" class="form-control" required />
                <span asp-validation-for="MobileNo" class="text-danger"></span>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col">
                <label asp-for="Address"></label>
                <textarea asp-for="Address" required class="form-control"></textarea>
                <span asp-validation-for="Address"></span>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col">
                <label asp-for="SystemType"></label>
                <select asp-for="SystemType" class="selectpicker" data-live-search="true" onse
                        asp-items="Html.GetEnumSelectList<ModuleServicePOS.Data.ModelClasses.SystemType>()">
                    <option disabled>Please select Type</option>
                </select>
                <span asp-validation-for="SystemType"></span>
            </div>
            <div class="col">
                <label asp-for="SummaryOfReceivedList">Summary Of Received: </label>
                <select asp-for="SummaryOfReceivedList" class="selectpicker" multiple data-live-search="true" onse
                        asp-items="@(new SelectList(Model.SummaryDetailsList, "Id", "ItemName",@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(selectedSummaryOfReceivedMasterIds))))" onchange="getSummaryData(this);">
                    <option disabled>Please select one</option>
                </select>
                <span asp-validation-for="SummaryOfReceivedList"></span>
            </div>
            
        </div>
        <div class="row mt-2">
            <div class="col">
                <label asp-for="OrderStatus">Order Status: </label>
                <select asp-for="OrderStatus" class="selectpicker" data-live-search="true" onse
                        asp-items="@(new SelectList(OrderStatusList, "Text", "Value"))">
                    <option disabled>Please select Status</option>
                </select>
                <span asp-validation-for="ProductStatusList"></span>
            </div>
            <div class="col">
                <label asp-for="ProductStatusList">Product Status</label>
                <select asp-for="ProductStatusList" class="selectpicker" multiple data-live-search="true" onse
                        asp-items="@(new SelectList(ProductStatusList, "Text", "Value"))">
                    <option disabled>Please select one</option>
                </select>
                <span asp-validation-for="ProductStatusList"></span>
            </div>
        </div>
        <hr />
        <table id="ts234" class="table table-hover table-fixed makeDatatable">
            <thead>
                <tr>
                    <th>#</th>
                    <th>ITEM NAME</th>
                    <th>COMPANY NAME</th>
                    <th>MODEL NUMBER</th>
                    <th>SERIAL NUMBER</th>
                    <th>AMOUNT</th>
                    @*<th>ACTION</th>*@
                </tr>
            </thead>
        </table>
        <div class="row mt-2">
            <div class="col">
                <label asp-for="Model"></label>
                <input type="text" class="form-control" asp-for="Model" value="@Model.Model" required />
                <span asp-validation-for="Model"></span>
            </div>
            <div class="col">
                <label asp-for="DatePrepared"></label>
                <input type="date" class="form-control" asp-for="DatePrepared" required />
                <span asp-validation-for="DatePrepared"></span>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col">
                <label asp-for="TechnicianNote"></label>
                <textarea asp-for="TechnicianNote" value="@Model.TechnicianNote" required class="form-control"></textarea>
                <span asp-validation-for="TechnicianNote"></span>
            </div>
        </div>

        <div class="row mt-2">
            <div class="col">
                <label asp-for="SubTotal"></label>
                <input type="hidden" class="form-control" asp-for="SubTotal" value="@Model.SubTotal" required />
                <input type="text" readonly class="form-control" value="@String.Format(new System.Globalization.CultureInfo("hi-IN"), "{0:c}", @Model.SubTotal)" required />
                <span asp-validation-for="SubTotal"></span>
            </div>
            <div class="col">
                <label asp-for="GrandTotal"></label>
                <input type="hidden" class="form-control" asp-for="GrandTotal" value="@Model.GrandTotal" required />
                <input type="text" readonly class="form-control" value="@String.Format(new System.Globalization.CultureInfo("hi-IN"), "{0:c}", @Model.GrandTotal)" required />
                <span asp-validation-for="GrandTotal"></span>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col mt-4">
                <label asp-for="IsClosed">Order Completed?</label>
                <input type="checkbox" asp-for="IsClosed" />
            </div>
            <div class="col">
                <label asp-for="SystemPassword"></label>
                <input type="text" asp-for="SystemPassword" class="form-control" />
                <span asp-validation-for="SystemPassword"></span>
            </div>
        </div>
        <hr />

        @{ if (Model.Id > 0)
            {
            <hr />
            <div class="row mt-2">
                <div class="col">
                    <button type="button" class="btn btn-outline-primary" id="btnAddEstimate" data-toggle="modal" onclick="frmestimate.reset();" data-target="#modal-NewEstimate">Add Estimate</button>
                </div>
                <hr class="mt-1 mb-1" />
            </div>
            <div class="row mt-2">
                <div class="col">
                    <table class="table table-hover table-fixed makeDatatable" id="EstimateDetailslist">
                        <thead>
                            <tr>
                                <th>DESCRIPTION</th>
                                <th>ADDED ON</th>
                                <th>AMOUNT</th>
                                <th>SERIAL NUMBER</th>
                                <th>ACTION</th>
                            </tr>
                        </thead>

                        <tbody>
                            @{
                                    if (Model.EstimateDetailsList == null)
                                    {
                                <tr class="text-center">
                                    <td colspan="5">NO ESTIMATION ADDED</td>

                                </tr>
                                    }
                                    else
                                    {
                                @foreach (var item in Model.EstimateDetailsList)
                                        {
                                <tr>
                                    <td>@item.Description</td>
                                    <td>@item.ItemAddDate.Value.ToString("yyyy/MM/dd")</td>
                                    <td>
                                        @String.Format(new System.Globalization.CultureInfo("hi-IN"), "{0:c}", @item.Amount)

                                    </td>
                                    <td>@item.SerialNo</td>
                                    <td><button type="button" class="btn btn-danger" onclick="removeEstimate(@item.Id)">Delete</button></td>
                                </tr>
                                        }
                                    }
                            }

                        </tbody>
                    </table>
                </div>
            </div>
            }
        }

    </div>
</form>
@section scripts{
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script>
        var selectedSORIds = JSON.parse('@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(selectedSummaryOfReceivedMasterIds))');
        var isinitSORTable = false;
        var JSON_initSORTable = [];
        var listAllSummaryOfReceived = [];
        var tableinitSORTable;

        function removeEstimate(estimateId) {
            debugger;
            if (confirm("Are You Sure To Delete Estimate..?")) {
                $.ajax({
                    type: 'POST',
                    url: '/Admin/DeleteEstimate?estimateId=' + estimateId,
                    success: function (response) {
                        window.location.reload();
                    },
                    error: function () {
                        alert("error");
                    }
                });
            }
        }

        function isNumeric(str) {
            if (typeof str != "string") return false // we only process strings!
            return !isNaN(str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...
                !isNaN(parseFloat(str)) // ...and ensure strings of whitespace fail
        }
        function fn_listAllSummaryOfReceived() {
            listAllSummaryOfReceived = [];
            $("#SummaryOfReceivedList option").each(function () {
                if (isNumeric($(this).val())) {
                    listAllSummaryOfReceived.push({
                        SummaryOfReceivedMasterId: parseInt($(this).val()),
                        LabelText: $(this).text(),
                        CompanyName: "",
                        ModelNumber: "",
                        SerialNumber: ""
                    })
                }
            });
        }
        function getSummaryData(element) {
            fn_listAllSummaryOfReceived();
            var listSelectedAllSummaryOfReceived = []

            $("#SummaryOfReceivedList option:selected").each(function () {
                debugger;
                let SummaryOfReceivedMasterId = parseInt($(this).val());
                let labelText = $(this).text();

                listSelectedAllSummaryOfReceived.push(listAllSummaryOfReceived.filter((item) => parseInt(item.SummaryOfReceivedMasterId) === SummaryOfReceivedMasterId)[0]);
                PushSORData(labelText, SummaryOfReceivedMasterId, "", "", "");
            });
            listAllSummaryOfReceived.forEach(function (data) {
                if (listSelectedAllSummaryOfReceived.filter((item) => item.SummaryOfReceivedMasterId == data.SummaryOfReceivedMasterId).length == 0) {
                    PopSORData(data.SummaryOfReceivedMasterId)
                }
            });
            updateJSON_initSORTable();
        }

        function PushSORData(labelText, SummaryOfReceivedMasterId, CompanyName, ModelNumber, SerialNumber) {
            if (JSON_initSORTable.filter((item) => item.SummaryOfReceivedMasterId === SummaryOfReceivedMasterId).length === 0) {
                JSON_initSORTable.push({
                    Id: JSON_initSORTable.length + 1,
                    LabelText: labelText,
                    SummaryOfReceivedMasterId: SummaryOfReceivedMasterId,
                    CompanyName: CompanyName,
                    ModelNumber: ModelNumber,
                    SerialNumber: SerialNumber
                });
            }
        }

        function PopSORData(idToRemove) {
            JSON_initSORTable = JSON_initSORTable.filter((item) => item.SummaryOfReceivedMasterId !== parseInt(idToRemove));
            $("#SummaryOfReceivedOrderDetailsJSON").val(JSON.stringify(JSON_initSORTable));
        }
        function valueChange(element, SummaryOfReceivedMasterId) {
            if (element.value) {
                var data = JSON_initSORTable.filter((item) => item.SummaryOfReceivedMasterId == SummaryOfReceivedMasterId)[0]
                JSON_initSORTable = JSON_initSORTable.filter((item) => item.SummaryOfReceivedMasterId !== SummaryOfReceivedMasterId)
                if (element.id == "CompanyName") {
                    data.CompanyName = element.value;
                }
                else if (element.id == "ModelNumber") {
                    data.ModelNumber = element.value;
                }
                else if (element.id == "SerialNumber") {
                    data.SerialNumber = element.value;
                }
                PushSORData(data.LabelText, data.SummaryOfReceivedMasterId, data.CompanyName, data.ModelNumber, data.SerialNumber);
                $("#SummaryOfReceivedOrderDetailsJSON").val(JSON.stringify(JSON_initSORTable));
            }
        }
        function updateJSON_initSORTable() {
            $("#ts234").dataTable().fnDestroy();
            $('#ts234').dataTable({
                "aaData": JSON_initSORTable,
                "aDataSort": [1, 'asc'],
                "aoColumns": [
                    { title: "Id ", "data": "Id" },
                    {
                        title: "Id ", "data": "SummaryOfReceivedMasterId",
                        visible: false,
                        render: function (data, type, row) {
                            return '<input  id="hiddenSummaryOfReceivedMasterId" name="hiddenSummaryOfReceivedMasterId" type="hidden"  value = ' + row.SummaryOfReceivedMasterId + '  >';
                        }
                    },
                    {
                        title: "Item Name ", "data": "LabelText",
                        render: function (data, type, row) {
                            return '<input class="form-control labelTextInput" disabled readonly id="Markup" name="Markup" type="text"  value = ' + row.LabelText + '  >';
                        }
                    },

                    {
                        "sTitle": "Company Name",
                        "mData": "CompanyName",
                        render: function (data, type, row) {
                            return '<input class="form-control companyNameInput" id="CompanyName" name="CompanyName" onblur="valueChange(this,' + row.SummaryOfReceivedMasterId + ')" type="text" value=' + row.CompanyName + '  >';
                        }
                    },
                    {
                        "sTitle": "Model Number",
                        "mData": "ModelNumber",
                        render: function (data, type, row) {
                            return '<input class="form-control modelNumberInput" id="ModelNumber" name="ModelNumber" name="ModelNumber" onblur="valueChange(this,' + row.SummaryOfReceivedMasterId + ')" type="text"  value=' + row.ModelNumber + '  >';
                        }
                    },
                    {
                        "sTitle": "Serial Number",
                        "mData": "SerialNumber",
                        render: function (data, type, row) {
                            return '<input class="form-control serialNumberInput" id="SerialNumber" name="SerialNumber" onblur="valueChange(this,' + row.SummaryOfReceivedMasterId + ')" type="text"  value=' + row.SerialNumber + '  >';
                        }
                    },
                    //{
                    //    "sTitle": "ACTION",
                    //    render: function (data, type, row) {
                    //        return '<button type="button" class="btn btn-primary " onclick="PopSORData(' + row.SummaryOfReceivedMasterId +');updateJSON_initSORTable();">Remove</button>';
                    //    }
                    //},
                ],
                "drawCallback": function (settings) {
                    $(".trackInput").on("change", function () {
                        var $row = $(this).parents("tr");
                        var rowData = table.row($row).data();
                        rowData.MarkupValue = $(this).val();
                    })
                }
            });
        }
        (function () {
            fn_listAllSummaryOfReceived();
            if (document.getElementById('SummaryOfReceivedOrderDetailsJSON').value) {
                JSON_initSORTable = JSON.parse(document.getElementById('SummaryOfReceivedOrderDetailsJSON').value).map(s => ({
                    Id: s.$id,
                    LabelText: listAllSummaryOfReceived.filter(item => item.SummaryOfReceivedMasterId == s.SummaryOfReceivedMasterId)[0].LabelText.trim(),
                    SummaryOfReceivedMasterId: s.SummaryOfReceivedMasterId,
                    CompanyName: s.CompanyName,
                    ModelNumber: s.ModelNumber,
                    SerialNumber: s.SerialNumber
                }));
            }
            updateJSON_initSORTable();
        })();
    </script>

}
<div class="modal fade" id="modal-NewEstimate" style="display: none;">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header btn-primary">
                <h4 class="modal-title">Add New Estimate</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>&nbsp;
                </button>
            </div>
            <form method="post" asp-action="AddEstimate" asp-controller="Admin" name="frmestimate" id="frmaddEstimate">
                <div class="modal-body">
                    <input type="hidden" asp-for="EstimateDetails.OrderDetailId" value="@Model.Id" />
                    <div class="row justify-content-between">
                        <div class="col form-group">
                            <label asp-for="EstimateDetails.Description"></label>
                            <textarea asp-for="EstimateDetails.Description" class="form-control" required></textarea>
                            <span asp-validation-for="EstimateDetails.Description" class="text-danger"></span>
                        </div>

                    </div>
                    <div class="row justify-content-between">
                        <div class="col  form-group">
                            <label asp-for="EstimateDetails.Amount"></label>
                            <input asp-for="EstimateDetails.Amount" class="form-control" required />
                            <span asp-validation-for="EstimateDetails.Amount" class="text-danger"></span>
                        </div>
                        <div class="col  form-group">
                            <label asp-for="EstimateDetails.SerialNo"></label>
                            <input asp-for="EstimateDetails.SerialNo" class="form-control" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-info" data-dismiss="modal">Close</button>&nbsp;&nbsp;
                    <button type="submit" class="btn btn-primary pull-right">Save</button>
                </div>
            </form>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>